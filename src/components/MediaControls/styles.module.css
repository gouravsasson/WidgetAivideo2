.container {
  position: relative;
  width: 320px;
  margin: 0 auto;
  z-index: 50;
  filter: drop-shadow(0 0 30px rgba(123, 74, 172, 0.2));
  animation: fadeIn 0.5s ease-out;
}

.mediaWrapper {
  position: relative;
  width: 100%;
  aspect-ratio: 1;
  border-radius: 24px;
  overflow: hidden;
  background: rgba(0, 0, 0, 0.2);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  transition: all 0.3s ease;
}

.mediaWrapper::before {
  content: '';
  position: absolute;
  inset: -1px;
  padding: 1px;
  border-radius: inherit;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.3),
    rgba(255, 255, 255, 0.1) 50%,
    rgba(255, 255, 255, 0.05)
  );
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
}

.video {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: 1;
  transform: scale(1.02);
  opacity: 0;
  transition: opacity 0.5s ease;
}

.video.ready {
  opacity: 1;
}

.overlay {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 2;
}

.glassPane {
  position: absolute;
  inset: 0;
  background: radial-gradient(
    circle at center,
    transparent 30%,
    rgba(0, 0, 0, 0.3) 100%
  );
  backdrop-filter: blur(4px);
}

.micButton {
  position: relative;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
  transform-style: preserve-3d;
  perspective: 1000px;
  animation: buttonAppear 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
}

.micButton::before {
  content: '';
  position: absolute;
  inset: -2px;
  border-radius: inherit;
  padding: 2px;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.4),
    rgba(255, 255, 255, 0.1)
  );
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
}

.buttonGlow {
  position: absolute;
  inset: -20px;
  border-radius: inherit;
  background: radial-gradient(
    circle at center,
    rgba(123, 74, 172, 0.3),
    transparent 70%
  );
  opacity: 0;
  transition: all 0.3s ease;
}

.micButton:hover {
  transform: scale(1.05) translateZ(10px);
  background: rgba(255, 255, 255, 0.15);
}

.micButton:hover .buttonGlow {
  opacity: 0.5;
  transform: scale(1.1);
}

.micButton svg {
  width: 32px;
  height: 32px;
  filter: drop-shadow(0 0 10px rgba(255, 255, 255, 0.3));
  transition: all 0.3s ease;
}

.micButton:hover svg {
  transform: scale(1.1);
  filter: drop-shadow(0 0 15px rgba(255, 255, 255, 0.4));
}

.speaking .micButton {
  background: rgba(123, 74, 172, 0.3);
  box-shadow: 
    0 0 30px rgba(123, 74, 172, 0.3),
    inset 0 0 20px rgba(255, 255, 255, 0.2);
  animation: speakingPulse 2s ease-in-out infinite;
}

.speaking .buttonGlow {
  opacity: 1;
  animation: glowPulse 2s ease-in-out infinite;
}

.initializing {
  opacity: 0.7;
  transform: scale(0.95);
  pointer-events: none;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes buttonAppear {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes speakingPulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

@keyframes glowPulse {
  0%, 100% {
    opacity: 0.7;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
  }
}